<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on gravel&#39;s blog</title><link>https://leongravel.com/categories/docker/</link><description>Recent content in Docker on gravel&#39;s blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 23 Feb 2019 23:01:41 +0000</lastBuildDate><atom:link href="https://leongravel.com/categories/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>基于Alpine的基础镜像构建</title><link>https://leongravel.com/post/%E5%9F%BA%E4%BA%8Ealpine%E7%9A%84%E5%9F%BA%E7%A1%80%E9%95%9C%E5%83%8F%E6%9E%84%E5%BB%BA/</link><pubDate>Sat, 23 Feb 2019 23:01:41 +0000</pubDate><guid>https://leongravel.com/post/%E5%9F%BA%E4%BA%8Ealpine%E7%9A%84%E5%9F%BA%E7%A1%80%E9%95%9C%E5%83%8F%E6%9E%84%E5%BB%BA/</guid><description>&lt;p&gt;刚开始在项目中使用docker的时候，使用的是centos作为基础镜像。centos的官方镜像有70M左右。加上jdk、tomcat，一个完整的业务系统，可能有450M左右。在项目组同学去试用部署的时候，所以的应用包加上服务包，有点过于大了。而且以centos作为基础镜像，可能包含很多我们并不需要的功能。所以，决定转用alpine。&lt;/p&gt;</description></item><item><title>docker导出镜像压缩包</title><link>https://leongravel.com/post/docker%E5%AF%BC%E5%87%BA%E9%95%9C%E5%83%8F%E5%8E%8B%E7%BC%A9%E5%8C%85/</link><pubDate>Mon, 18 Feb 2019 23:01:41 +0000</pubDate><guid>https://leongravel.com/post/docker%E5%AF%BC%E5%87%BA%E9%95%9C%E5%83%8F%E5%8E%8B%E7%BC%A9%E5%8C%85/</guid><description>&lt;p&gt;网上关于&lt;code&gt;docker&lt;/code&gt;镜像的导出导入的文章已经很多了，无非是&lt;code&gt;save&lt;/code&gt;、&lt;code&gt;export&lt;/code&gt; 、&lt;code&gt;load&lt;/code&gt;、&lt;code&gt;import&lt;/code&gt; 这几个命令，我这里只是简单记录一下今天遇到的一个特殊情况。&lt;/p&gt;</description></item><item><title>给Docker容器设置固定ip</title><link>https://leongravel.com/post/%E7%BB%99docker%E5%AE%B9%E5%99%A8%E8%AE%BE%E7%BD%AE%E5%9B%BA%E5%AE%9Aip/</link><pubDate>Mon, 11 Feb 2019 20:54:41 +0000</pubDate><guid>https://leongravel.com/post/%E7%BB%99docker%E5%AE%B9%E5%99%A8%E8%AE%BE%E7%BD%AE%E5%9B%BA%E5%AE%9Aip/</guid><description>&lt;p&gt;今天在查应用日志的时候，发现日志收集分析的应用，收到很多&lt;code&gt;ip&lt;/code&gt;发来的同一系统的日志。经分析发现，这么多ip都是出自三台机器，由于过年期间有些机器有过断电重启的情况，所以 &lt;code&gt;docker&lt;/code&gt; 给这个应用重新赋予了&lt;code&gt;ip&lt;/code&gt;，导致了以上的情况出现，日志分析应用，无法知道这个日志的准确来源。&lt;/p&gt;</description></item><item><title>解决docker 容器内访问宿主机“No route to host”的问题</title><link>https://leongravel.com/post/%E8%A7%A3%E5%86%B3docker-%E5%AE%B9%E5%99%A8%E5%86%85%E8%AE%BF%E9%97%AE%E5%AE%BF%E4%B8%BB%E6%9C%BAno-route-to-host%E7%9A%84%E9%97%AE%E9%A2%98/</link><pubDate>Sun, 04 Nov 2018 20:54:41 +0000</pubDate><guid>https://leongravel.com/post/%E8%A7%A3%E5%86%B3docker-%E5%AE%B9%E5%99%A8%E5%86%85%E8%AE%BF%E9%97%AE%E5%AE%BF%E4%B8%BB%E6%9C%BAno-route-to-host%E7%9A%84%E9%97%AE%E9%A2%98/</guid><description>&lt;p&gt;首先确认是否已经关闭防火墙； 请顺序运行以下命令：&lt;/p&gt;</description></item><item><title>docker安装目录迁移</title><link>https://leongravel.com/post/docker%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95%E8%BF%81%E7%A7%BB/</link><pubDate>Sat, 20 Oct 2018 23:01:41 +0000</pubDate><guid>https://leongravel.com/post/docker%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95%E8%BF%81%E7%A7%BB/</guid><description>&lt;p&gt;&lt;code&gt;docker&lt;/code&gt;默认安装路径是&lt;code&gt;var/lib/docker&lt;/code&gt;这个目录下面的，如果这个目录挂载的空间不大的话，那么在实际使用中，可能会导致&lt;code&gt;docker&lt;/code&gt;空间不足的情况，我们需要将这个默认目录迁移到比较大的空间下面去。&lt;/p&gt;</description></item><item><title>docker-compose搭建flink环境</title><link>https://leongravel.com/post/docker-compose%E6%90%AD%E5%BB%BAflink%E7%8E%AF%E5%A2%83/</link><pubDate>Mon, 15 Oct 2018 23:01:41 +0000</pubDate><guid>https://leongravel.com/post/docker-compose%E6%90%AD%E5%BB%BAflink%E7%8E%AF%E5%A2%83/</guid><description>&lt;p&gt;嗯，最近在搭建flink的环境，用普通的 &lt;code&gt;docker&lt;/code&gt; 命令构建的时候，老是遇到各种的问题。于是转为用 &lt;code&gt;docker-compose&lt;/code&gt; 试试。&lt;/p&gt;</description></item><item><title>Docker容器扩容</title><link>https://leongravel.com/post/docker-%E5%AE%B9%E5%99%A8%E6%89%A9%E5%AE%B9/</link><pubDate>Tue, 09 Oct 2018 23:01:41 +0000</pubDate><guid>https://leongravel.com/post/docker-%E5%AE%B9%E5%99%A8%E6%89%A9%E5%AE%B9/</guid><description>&lt;p&gt;今天遇到一个问题，&lt;code&gt;flink&lt;/code&gt; 的 &lt;code&gt;job manager&lt;/code&gt; 分块，把容器的空间占满了，导致无法上传新的 &lt;code&gt;job&lt;/code&gt;。所以需要容器扩容。简单查了一下，做下记录。&lt;/p&gt;</description></item><item><title>拷贝文件到Docker容器中</title><link>https://leongravel.com/post/%E6%8B%B7%E8%B4%9D%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E5%88%B0docker%E5%AE%B9%E5%99%A8/</link><pubDate>Thu, 27 Sep 2018 23:01:41 +0000</pubDate><guid>https://leongravel.com/post/%E6%8B%B7%E8%B4%9D%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E5%88%B0docker%E5%AE%B9%E5%99%A8/</guid><description>&lt;p&gt;查找需要拷贝的目的地容器&lt;/p&gt;</description></item><item><title>Docker 如何进入运行的tomcat容器</title><link>https://leongravel.com/post/%E5%A6%82%E4%BD%95%E8%BF%9B%E5%85%A5%E8%BF%90%E8%A1%8C%E7%9A%84tomcat%E5%AE%B9%E5%99%A8/</link><pubDate>Wed, 26 Sep 2018 23:01:41 +0000</pubDate><guid>https://leongravel.com/post/%E5%A6%82%E4%BD%95%E8%BF%9B%E5%85%A5%E8%BF%90%E8%A1%8C%E7%9A%84tomcat%E5%AE%B9%E5%99%A8/</guid><description>&lt;h3 id=&#34;问题描述&#34;&gt;问题描述&lt;/h3&gt;
&lt;p&gt;当docker在 “-d”守护态运行tomcat容器的时候，，docker attach 容器id 就会一直卡着。
因为此时容器运行的进程是ssh，而不是/bin/bash 也没有虚拟终端（-it）参数，所以是进入不到的。&lt;/p&gt;</description></item><item><title>docker安装redis并使用外部配置和数据初始化</title><link>https://leongravel.com/post/docker%E5%AE%89%E8%A3%85redis%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%A4%96%E9%83%A8%E9%85%8D%E7%BD%AE%E5%92%8C%E6%95%B0%E6%8D%AE%E5%88%9D%E5%A7%8B%E5%8C%96/</link><pubDate>Wed, 19 Sep 2018 23:01:41 +0000</pubDate><guid>https://leongravel.com/post/docker%E5%AE%89%E8%A3%85redis%E5%B9%B6%E4%BD%BF%E7%94%A8%E5%A4%96%E9%83%A8%E9%85%8D%E7%BD%AE%E5%92%8C%E6%95%B0%E6%8D%AE%E5%88%9D%E5%A7%8B%E5%8C%96/</guid><description>&lt;p&gt;我这里安装的是&lt;code&gt;redis:4.0&lt;/code&gt;&lt;/p&gt;</description></item><item><title>gitlab runner &#43; docker 自动构建</title><link>https://leongravel.com/post/gitlabrunner&#43;docker%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E6%89%93%E5%8C%85%E9%95%9C%E5%83%8Fpush%E5%88%B0%E5%85%AC%E5%8F%B8%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93/</link><pubDate>Tue, 11 Sep 2018 23:01:41 +0000</pubDate><guid>https://leongravel.com/post/gitlabrunner&#43;docker%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E6%89%93%E5%8C%85%E9%95%9C%E5%83%8Fpush%E5%88%B0%E5%85%AC%E5%8F%B8%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93/</guid><description>&lt;p&gt;最开始的时候，我尝试&lt;code&gt;Jenkins&lt;/code&gt;+&lt;code&gt;docker&lt;/code&gt;，可是&lt;code&gt;Jenkins&lt;/code&gt;的&lt;code&gt;docker&lt;/code&gt;依赖和插件，实在太过麻烦，配置项等等，太重。所以我转为使用&lt;code&gt;gitlab runner&lt;/code&gt;来实现自动构建并打包镜像。&lt;/p&gt;</description></item><item><title>k8s集群搭建</title><link>https://leongravel.com/post/k8s%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</link><pubDate>Mon, 10 Sep 2018 20:54:41 +0000</pubDate><guid>https://leongravel.com/post/k8s%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</guid><description>&lt;h3 id=&#34;使用minikube单机部署&#34;&gt;使用minikube单机部署&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/minikube&#34;&gt;minikube&lt;/a&gt;是一个用go语言开发的可以在本地运行kubernetes的利器。首先，我们需要安装它：&lt;/p&gt;</description></item><item><title>Docker上传镜像到私服出错</title><link>https://leongravel.com/post/docker%E5%87%BA%E9%94%99/</link><pubDate>Wed, 05 Sep 2018 23:01:41 +0000</pubDate><guid>https://leongravel.com/post/docker%E5%87%BA%E9%94%99/</guid><description>&lt;p&gt;今天在公司将自己的镜像上传到公司仓库的时候，出现了错误：&lt;/p&gt;</description></item></channel></rss>